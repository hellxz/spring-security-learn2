<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation=" http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-4.2.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
        security:http 配置Spring过滤器调用链
        1）需要拦截哪些资源
        2）需要哪些角色权限
        3）定义认证方式：HttpBasic FormLogin(常用)
        4）定义登录页面、请求地址、错误处理方式等

    -->
    <security:http>
        <!--
            pattern: 被拦截的资源
            access: 拦截方式
                    isAnonymous(): 只允许匿名访问，登录过的用户无法访问，提示403
                    permitAll(): 允许所有人访问
                    isAuthenticated(): 需要登录
                    isFullyAuthenticated() 需要登录才能访问
                    hasRole('角色名')： 登录且必须拥有某些角色才能访问资源
         -->
        <security:intercept-url pattern="/index" access="permitAll()"/>
        <security:intercept-url pattern="/user/loginPage" access="permitAll()"/>
        <security:intercept-url pattern="/product/get" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/product/add" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/product/del" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/product/mod" access="hasRole('ROLE_ADMIN')"/>
        <!--防止跨域请求失败-->
        <security:intercept-url pattern="/**" method="OPTIONS" access="permitAll()"/>
        <security:intercept-url pattern="/**" access="isFullyAuthenticated()"/>

        <!--使用HttpBasic进行授权 （弹出一个SpringSecurity自带的提示窗或登录页）-->
<!--        <security:http-basic/>-->
        <!--使用表单登录-->
<!--        <security:form-login/>-->
        <!--
            自定义登录页面与自定义登录处理页面
                login-page：自定义登录页
                login-processing-url:自定义登录处理页面
                default-target-url:默认登录成功跳转页面
                authentication-success-forward-url:登录成功跳转页面
                authentication-failure-forward-url：登录失败跳转页面
                注意：如果自定义登录处理的页面未放开权限，那么会导致403跳转次数过多的错误！
        -->
        <security:form-login login-page="/user/loginPage" login-processing-url="/user/login" authentication-success-forward-url="/index"/>

        <!--
            权限不足跳转自定义处理页
                ps: 此处没有权限访问的时候报了405错误，结果网上说这很正常……所以这个跳转是失败了
        -->
        <security:access-denied-handler error-page="/user/access-denied"/>


        <!--关闭跨域拦截-->
        <security:csrf disabled="true"/>
    </security:http>

    <!--
        security:authentication-manager 授权管理器
        1）认证信息提供方式（数据库或写死用户名密码权限等方式）
    -->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="myUserDetailsService"/>
<!--        <security:authentication-provider>-->
<!--            <security:user-service>-->
                <!--固定的用户、密码、角色-->
<!--                <security:user name="hellxz" password="123" authorities="ROLE_USER"/>-->
<!--                <security:user name="jane" password="456" authorities="ROLE_ADMIN"/>-->
<!--            </security:user-service>-->
<!--        </security:authentication-provider>-->
    </security:authentication-manager>
    <bean id="myUserDetailsService" class="com.github.hellxz.security.security.MyUserDetailsService"/>
</beans>